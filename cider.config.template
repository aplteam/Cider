// Configuration file for the Dyalog project manager Cider.// Relative paths refer to the folder a project's config file stems from.// Use ]Cider.OpenProject to open a project that carries a file "cider.config".// For a detailed documentation see Cider's User Guide// +------------------------------------------------------------------------+// | Do not change this file - it might well be replaced with a new version |// +------------------------------------------------------------------------+// Version 0.5.0{    CIDER: {    // These are Cider's own configuration parameters        	    cider_version: "",                    // The version of Cider the file was created/modified with; set by Cider        parent: "#",        projectSpace: "??",                   // Where the project is going to live; overwrite with ]Cider.OpenProject <path> -target=#.foo        source: "APLSource",                  // Where does the code live? (relative to the project folder; might be empty)        dependencies: {                       // Folder(s) with installed Tatin packages the project eventually depends on            tatin: "",      				  // Accepts <folder> or "<folder>=<target_namespace>"; typically something like "tatin-dependencies"            nuget: "",      				  // Like "tatin" (typically something like "nuget-dependencies")        },        dependencies_dev: {                   // Folder(s) with installed Tatin packages the project depends on for development and testing            tatin: "",  					  // Same as "dependencies" but for development stuff (typically "tatin-dependencies_dev")          //nuget                                NOT allowed in dependencies_dev (yet?!)        },                distributionFolder: "Dist",           // Folder used to put stuff for publishing, like a package ZIP or an installer EXE etc.        init: "",                             // Project fn; executed when everything else is done.  Relative to root of the project.        project_url: "",             	      // For example a URL pointing to a GitHub project; information only		tests : "",						      // Expression that executes the test cases of the project (if any). Relative to root of the project.		make : "",						      // Expression that produces a new version of the project. Relative to root of the project.    },        //LINK: {    // These are LINK parameters which are passed on to LINK when Cider brings the APL code into the WS with LINK.    // With Link 4.0 there is no need any more to use this because Link has now its own config file.    // Until Link 4.0.0 is the only Link version supported, we allow non-default settings to be defined here.	// Note that from version 0.46.0 onwards, this section is optional, not mandatory anymore.    //},                SYSVARS: {                                // You may add other ⎕-variables here like, say, ⎕CT as "ct" etc.            io: 1,                                      ml: 1,    },    USER: {                                       // User-defined stuff (ignored by Cider); what follows is an example    // convertFromAcre : 1,                     },}
