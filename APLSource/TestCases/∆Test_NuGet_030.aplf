 R←∆Test_NuGet_030(stopFlag batchFlag);⎕TRAP;folder;tempDir;config;parms;success;log;list;res
⍝ Open a project, add a NuGet dependency where package name and namespace differ, load, call, list, close, re-open, close
⎕TRAP←(999 'C' '∘∘∘ ⍝ Deliberate error')(0 'N')
 R←T._Failed

 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS''
 folder←∆GetTestPath⊃⎕SI
 tempDir←∆GetFolderInTempDir⊃⎕SI
 tempDir ⎕NCOPY⍠1⊢folder,'/*'

 config←##.Cider.ReadProjectConfigFile tempDir
 config.CIDER.dependencies.nuget←'MyNugetPkgs=Utils'
 config ##.Cider.WriteProjectConfigFile tempDir

 parms←##.Cider.CreateOpenParms''
 parms.folder←tempDir
 parms.noPkgLoad←0
 parms.batch←1
 parms.ignoreUserExec←1

 ##.Cider.C.AddAutomation'YesOrNo' 'ChangeCurrentDir@' 'n'
 (success log)←##.Cider.OpenProject parms
 →T.GoToTidyUp~success
 →T.GoToTidyUp∨/'ERROR'⍷log

 list←##.Cider.AddNuGetDependencies'Parquet.Net'tempDir
 →T.GoToTidyUp~(⊂'Parquet.Net')∆LazyMatch list

 list←0 1 ##.Cider.LoadNuGetDependencies tempDir #.TEMP
 →T.GoToTidyUp~(⊂'Parquet.Net')∆LazyMatch list

 →T.GoToTidyUp~9.6≡⎕NC ⊂'#.TEMP.Utils.Parquet.ParquetException'
 →T.GoToTidyUp~9.6≡⎕NC ⊂'#.TEMP.Utils.Parquet.ParquetActor'

 res←##.Cider.ListNuGetDependencies tempDir
 →T.GoToTidyUp 2≠≡res
 →T.GoToTidyUp~(⊂'Parquet.Net')∆LazyMatch res[;1]

 res←(~parms.batch)##.Cider.CloseProject tempDir
 →T.GoToTidyUp res≠1

 #.TEMP.(⎕EX ⎕NL-⍳9)
 (success log)←##.Cider.OpenProject parms
 →T.GoToTidyUp~success
 →T.GoToTidyUp∨/'ERROR'⍷log
 →T.GoToTidyUp~9.6≡⎕NC ⊂'#.TEMP.Utils.Parquet.ParquetException'
 →T.GoToTidyUp~9.6≡⎕NC ⊂'#.TEMP.Utils.Parquet.ParquetActor'

 res←(~parms.batch)##.Cider.CloseProject tempDir
 →T.GoToTidyUp res≠1

 R←T._OK

∆TidyUp:
 ##.Cider.C.Cleanup
 res←∆LINK'Break' '#.TEMP'
 FilesAndDirs.RmDir tempDir,'/..'   ⍝ Does not work: the .NET DLL blocks this; there is no way around this at the time of writing (October 2023)
⍝Done
