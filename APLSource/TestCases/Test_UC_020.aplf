 r←Test_UC_020(stopFlag batchFlag);⎕TRAP;cmd;rc;msg;result;stop;ref
⍝ Exercise OpenProject with all possible settings of -watch
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 'TEMP'#.⎕NS''
 cmd←'OpenProject "',(∆GetTestPath⊃⎕SI),'" -parent=#.TEMP -ignoreUserExec -batch'

 stop←0
 ref←∆GetRefToCommTools
 ref.AddAutomation'YesOrNo' 'ChangeCurrentDir@' 'n'
 (rc msg result)←stop ∆UCMD cmd,' -watch=ns'
 Assert rc=0
 →T.GoToTidyUp'ns'≢#.TEMP.Foo.CiderConfig.LINK.watch
 {}0 ⎕SE.Cider.CloseProject'#.TEMP.Foo'

 :If ##.Cider.HasDotNet
     #.⎕EX'TEMP' ⋄ 'TEMP'#.⎕NS''
     (rc msg result)←stop ∆UCMD cmd,' -watch=dir'
     Assert rc=0
     →T.GoToTidyUp'dir'≢#.TEMP.Foo.CiderConfig.LINK.watch
     {}0 ⎕SE.Cider.CloseProject'#.TEMP.Foo'

     #.⎕EX'TEMP' ⋄ 'TEMP'#.⎕NS''
     (rc msg result)←stop ∆UCMD cmd,' -watch=both'
     Assert rc=0
     →T.GoToTidyUp'both'≢#.TEMP.Foo.CiderConfig.LINK.watch
     {}0 ⎕SE.Cider.CloseProject'#.TEMP.Foo'
 :EndIf

 (rc msg result)←stop ∆UCMD cmd,' -watch=firlefanz'
 →T.GoToTidyUp~∨/'invalid value for modifier <watch> (must be ONE of "ns dir both none")'⍷msg

 r←T._OK

∆TidyUp:
 ref.Cleanup
 {}0 ⎕SE.Cider.CloseProject'#.TEMP.Foo'
 #.⎕EX'TEMP'
⍝Done
