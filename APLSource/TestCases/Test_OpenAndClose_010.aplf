 R←Test_OpenAndClose_010(stopFlag batchFlag);⎕TRAP;tempDir;sourceFolder;list;res;rc;cfg;ref;msg
⍝ Open a (new) project with all sorts of Init functions
 ⎕TRAP←(999 'C' '∘∘∘ ⍝ Deliberate error')(0 'N')
 R←T._Failed

 tempDir←∆GetFolderInTempDir⊃⎕SI
 sourceFolder←tempDir,'/APLSource'
 'Create!'FilesAndDirs.CheckPath sourceFolder
 (tempDir,'/cider.config')⎕NCOPY(##.CiderConfig.HOME,'/TestData/cider.config.Foo')
 cfg←∆GetJSON5 tempDir,'/cider.config'
 cfg.CIDER.init←'Init'
 (⊂⎕JSON⍠('Dialect' 'JSON5')('Compact' 0)⊣cfg)FilesAndDirs.NPUT(tempDir,'/cider.config')1
 (⊂'Init' '∆INIT←1')FilesAndDirs.NPUT tempDir,'/APLSource/Init.aplf'
 (⊂'r←Hello' 'r←''World''')FilesAndDirs.NPUT sourceFolder,'/hello.aplf'

 ref←∆GetRefToCommTools
 ref.AddAutomation'YesOrNo' 'ChangeCurrentDir@' 'n'
 ref.AddAutomation'YesOrNo' 'OpenAsWell@' 'y'
 (rc msg res)←∆UCMD'CreateProject "',tempDir,'" # -noEdit -acceptConfig -ignoreUserExec -batch'
 Assert∨/'#.Foo'⍷res
 list←FilesAndDirs.ListFiles2 tempDir
 →T.GoToTidyUp 1≠≢list
 →T.GoToTidyUp ##.Cider.ConfigFilename≢⊃,/1↓⎕NPARTS 1⊃list
 →T.GoToTidyUp 1≠#.Foo.∆INIT
 res←∆LINK'Break' '#.Foo'
 Assert res ∆StartsWith'Unlinked:'
 #.⎕EX'Foo'

 (⊂'Init x' '∆INIT←1')FilesAndDirs.NPUT(tempDir,'/APLSource/Init.aplf')1
 (rc msg res)←∆UCMD'OpenProject "',tempDir,'" -ignoreUserExec -batch'
 Assert∨/'#.Foo'⍷res
 →T.GoToTidyUp 1≠#.Foo.∆INIT
 res←∆LINK'Break' '#.Foo'
 Assert res ∆StartsWith'Unlinked:'
 #.⎕EX'Foo'

 (⊂'{x} Init y' '∆INIT←1')FilesAndDirs.NPUT(tempDir,'/APLSource/Init.aplf')1
 (rc msg res)←∆UCMD'OpenProject "',tempDir,'" -ignoreUserExec -batch'
 Assert∨/'#.Foo'⍷res
 →T.GoToTidyUp 1≠#.Foo.∆INIT
 res←∆LINK'Break' '#.Foo'
 Assert res ∆StartsWith'Unlinked:'
 #.⎕EX'Foo'

 (⊂'{r}←Init y' 'r←∆INIT←1')FilesAndDirs.NPUT(tempDir,'/APLSource/Init.aplf')1
 (rc msg res)←∆UCMD'OpenProject "',tempDir,'" -ignoreUserExec -batch'
 Assert∨/'#.Foo'⍷res
 →T.GoToTidyUp 1≠#.Foo.∆INIT
 res←∆LINK'Break' '#.Foo'
 Assert res ∆StartsWith'Unlinked:'
 #.⎕EX'Foo'

 (⊂'x Init y' '∆INIT←1')FilesAndDirs.NPUT(tempDir,'/APLSource/Init.aplf')1
 (rc msg res)←∆UCMD'OpenProject "',tempDir,'" -ignoreUserExec -batch -verbose'
 →T.GoToTidyUp~0<#.⎕NC'Foo'

 R←T._OK

∆TidyUp:
 ref.Cleanup
 res←∆LINK'Break' '#.Foo'
 Assert res ∆StartsWith'Unlinked:'
 #.⎕EX'Foo'
 rc←FilesAndDirs.RmDir tempDir,'/..'
 Assert 0=+/∊rc
⍝Done
