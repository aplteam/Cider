 r←{self}ListTatinDependencies folder;cfgFilename;cfg;buildFilenames;buildLists;b;tatinFolders;buildFolders;list;folder2;buildFilename;buff
⍝ `y` must point to a project, either as alias ([]) or as a project folder.
⍝ The actual Tatin dependency folders are established from the project config file.
⍝ `self` is only passed when this function calls itself.
 r←0 5⍴''
 :If IsAlias folder
     folder←GetFolderFromAlias2 folder
 :EndIf
 cfgFilename←folder,'/cider.config'
 :If F.Exists cfgFilename
     cfg←ReadProjectConfigFile cfgFilename
     tatinFolders←GetTatinDependencyFolders cfg
     :If 0<≢tatinFolders
         tatinFolders←RemoveTargetDefinition¨tatinFolders
         buildFolders←(⊂folder,'/'),¨tatinFolders
         buildFilenames←buildFolders,¨⊂'/apl-buildlist.json'
         buff←tatinFolders ListTatinDependencies_ buildFilenames
         buff[;1]←FilesAndDirs.EnforceSlash¨(FilesAndDirs.AddTrailingSep folder)∘,¨buff[;1]
         r⍪←buff
     :EndIf
 :Else
     buildFilename←folder,'/apl-buildlist.json'
     :If ⎕NEXISTS buildFilename
         r⍪←(⊂{¯1↓1⊃⎕NPARTS ⍵}buildFilename)ListTatinDependencies_⊂buildFilename
     :Else
         list←F.ListDirs2 folder
         :For folder2 :In list
             buff←1 ListTatinDependencies folder2
             :If 0<≢buff
                 r⍪←buff
             :EndIf
         :EndFor
     :EndIf
 :EndIf
 :If 0=⎕NC'self'
 :AndIf 0<≢r
     r[;1]←(≢F.AddTrailingSep folder)↓¨r[;1]
     r[⍸{~(⍵⍳⍵)=⍳≢⍵}r[;1];1]←⊂''
 :EndIf
