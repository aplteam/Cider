 r←level Help Cmd;ref;⎕TRAP;path
 r←''
 :Select level
 :Case 0
     :Select ⎕C Cmd
     :Case ⎕C'AddTatinDependencies'
         r,←⊂'Add one or more Tatin packages as dependencies'
         r,←⊂']Cider.AddTatinDependency [packages] [projectpath] -development -target='
     :Case ⎕C'AddNuGetDependencies'
         r,←⊂'Add one or more NuGet packages as dependencies'
         r,←⊂']Cider.AddNuGetDependencies [packages] [projectpath] -target='
     :Case ⎕C'CloseProject'
         r,←⊂'Break the Link between one or more project spaces and their associated files on disk'
         r,←⊂']Cider.CloseProject [<namespace-name>|alias-name] -all -fast'
     :Case ⎕C'Config'
         r,←⊂'Allow the user to edit one or both of Cider''s config files'
         r,←⊂']Cider.Config -print'
     :Case ⎕C'CreateProject'
         r,←⊂'Convert the given folder into a project'
         r,←⊂']Cider.CreateProject <folder> [<project-namespace>] -alias= -acceptConfig -noEdit -batch -ignoreUserExec'
     :Case ⎕C'Help'
         r,←⊂'Put the HTML help files on display'
         r,←⊂']Cider.Help'
     :Case ⎕C'LinkConfig'
         r,←⊂'Prints the contents of any .linkconfig file, or edit or delete it'
         r,←⊂']Cider.LinkConfig -edit -delete'
     :Case ⎕C'HowToMakeNewVersion'
         r,←⊂'Print the project''s specific statements to the session that will create a new version ("Make")'
     :Case ⎕C'HowToRunTests'
         r,←⊂'Print the project''s specific statements to the session that will run the test suite'
     :Case ⎕C'ListAliases'
         r,←⊂'List all defined aliases with their folders'
         r,←⊂']Cider.ListAliases -prune -edit -batch -scan='
     :Case ⎕C'ListNuGetDependencies'
         r,←⊂'List all NuGet dependencies'
         r,←⊂']Cider.ListNuGetDependencies [projectpath]'
     :Case ⎕C'ListOpenProjects'
         r,←⊂'List all opened projects'
         r,←⊂']Cider.ListOpenProjects -verbose'
     :Case ⎕C'ListTatinDependencies'
         r,←⊂'List all Tatin dependencies'
         r,←⊂']Cider.ListTatinDependencies [projectpath] -full -latest'
     :Case ⎕C'OpenProject'
         r,←⊂'Load all source files into the WS and keep them linked by default plus some more actions'
         r,←⊂']Cider.OpenProject [folder|alias] -projectSpace= -parent= -alias= -suppressInit -import -noPkgLoad -ignoreUserExec -watch=ns|dir|both -verbose -batch'
     :Case ⎕C'ProjectConfig'
         r,←⊂'Put the config file of a project on display'
         r,←⊂']Cider.ProjectConfig [path] -edit'
     :Case ⎕C'UpdateCider'
         r,←⊂'Attempt to update the currently running version of Cider'
         r,←⊂']Cider.UpdateCider'
     :Case ⎕C'Version'
         r,←⊂'Return name, version number and version date as a three-element vector'
         r,←⊂']Cider.Version'
     :EndSelect
     :If ~(⊂⎕C Cmd)∊⎕C'Version' 'Help'
         r,←''(']Cider.',Cmd,' -?? ⍝ Enter this for more information ')
     :EndIf
 :Case 1
     ref←help.level_1
     path←(⍕ref),'.',⎕C Cmd  ⍝ for editing the vars
     ('Unkown: ',Cmd)Assert 2=ref.⎕NC Cmd
     r←ref⍎Cmd
 :Case 2
     :If 0<help.⎕NC'level_2'
         ref←help.level_2
         path←(⍕ref),'.',Cmd  ⍝ for editing the vars
     :AndIf 2=ref.⎕NC Cmd
         r←ref⍎Cmd
     :Else
         r,←⊂'There is no additional help available'
     :EndIf
 :EndSelect
