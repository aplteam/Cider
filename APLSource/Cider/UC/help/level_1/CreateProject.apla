(
 'Requires a path to a folder ("source") that is about to become a project.'
 'You might also specify a namespace. If no namespace is provided, then its name is derived from'
 'the path. If the namespace does not yet exist it will be created.'
 'The namespace will be LINKed to "source". A namespace CiderConfig, holding the configuration'
 'data, will be injected into the namespace.'
 'For a root project (the whole of #, NOT recommended) you must specify # as 2nd argument.'
 ''
 ' * Creates a file "cider.config" in that folder'
 ' * Lets the user edit that file, and makes sure that all mandatory settings are specified correctly'
 ' * In case an alias is specified, the alias is saved'
 ' * Finally it attempts to open the new project'
 ''
 'If no path is specified it acts on the current directory, but in that case the user is prompted'
 'for confirmation to avoid mishaps.'
 ''
 '-acceptConfig    By default a file cider.config is created, and an error is thrown in'
 '                 case it already exists. You can use -acceptConfig to force CreateProject'
 '                 to accept an already existing config file.'
 '-noEdit          With -noEdit you can prevent the user from being asked to edit the config file.'
 '-alias=          In case you are going to work on the new project frequently you may specify'
 '                 -alias=name; from then on you can use the [alias] rather than the path.'
 '                 Note that aliases are not case sensitive.'
 '-batch           After a project has been created successfully, the user will be asked whether she'
 '                 wants to open the project as well. You can enforce that without the user being'
 '                 questioned by setting the -batch flag. Mainly useful for test cases.'
 '-ignoreUserExec  Suppress execution of a user function defined in Cider''s config file on this occasion.'
 ''
 'The full Cider documentation is available via '
 ']open https://aplteam.github.io/Cider/ '
)
