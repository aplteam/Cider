 {(filename1 filename2)}←CompareCommits(space folder args);hash1;hash2;flag;exe;parms;qdmx;name;default;hash1_;msg;rc;hash2_;buff
 (hash1 hash2)←{0≡⍵:'' ⋄ ⍵}¨args.(_1 _2)
 :If (,'.')≡,hash1
     'Argument is invalid'Assert 0=≢hash2
 :EndIf
 'Argument is invalid'Assert(,'.')≢hash2
 buff←folder ##.CompareCommits hash1 hash2
 (filename1 filename2 hash1 hash2)←4↑buff,'' ''    ⍝ Because old versions of CompareCommits did not return the hashes
 (hash1 hash2)←{⍵↑⍨¨8⌊≢¨⍵}hash1 hash2              ⍝ Short version suffices
 :If 0<+/⎕NEXISTS filename1 filename2
     :If args.files
         ⎕←filename1 filename2
     :Else
         :If flag←9=⎕SE.⎕NC'CompareFiles'
             default←''args.Switch'use'
             :Trap 911
                 (exe name)←⎕SE.CompareFiles.EstablishCompareEXE default
             :Else
                 qdmx←⎕DMX
                 ⎕←'Comparison with "CompareFiles" crashed'{0=≢⍵:⍺ ⋄ ⍺,' with "',⍵,'"'}qdmx.EM
                 :Return
             :EndTrap
         :AndIf 0<≢exe
             parms←⎕SE.CompareFiles.ComparisonTools.⍎'CreateParmsFor',name
             parms.(file1 file2)←filename1 filename2
             :If (,'.')≡hash1
                 parms.caption1←'Working area'
             :Else
                 (rc msg hash1_)←folder ##.U.RunGitCommand'show ',hash1,' -q'
                 parms.caption1←(hash1,{⍵↓⍨⍵⍳' '}{⍵↓⍨⍵⍳' '}1⊃hash1_),' from ',{⍵↓⍨⍵⍳' '}3⊃hash1_
             :EndIf
             (rc msg hash2_)←folder ##.U.RunGitCommand'show ',hash2,' -q'
             msg Assert rc=0
             parms.caption2←(hash2,{⍵↓⍨⍵⍳' '}{⍵↓⍨⍵⍳' '}1⊃hash2_),' from ',{⍵↓⍨⍵⍳' '}3⊃hash2_
             {}⎕SE.CompareFiles.Compare parms
             ⎕DL 1.2×{0=⍵.⎕NC'edit1':0 ⋄ 0=⍵.(edit1+edit2)}parms ⍝ Avoild deletion/early deletion
             ⎕NDELETE filename1 filename2
             (filename1 filename2)←⊂''
         :Else
             ⎕←filename1 filename2
         :EndIf
     :EndIf
 :EndIf
