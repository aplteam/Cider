(
 '## Overview'
 ''
 'This package provides functions that are useful for dealing with files and directories. '
 'They aim to be platform-independent.\\'
 'Note that error codes and messages may differ between operating systems for the same'
 'type of problem.\\'
 ''
 '## Characters to avoid in file names and paths'
 'Windows filenames cannot contain any of these characters: `\/:*?"<>|`.'
 'If you want platform-independent code, now or in the future,'
 'avoid using them even in Mac OS or Linux filenames.\\'
 ''
 '## Separators in file paths'
 'Dyalog tried to ease the pain by converting any `\` character into `/` on Windows.'
 'The idea of sticking always with the `/` as separator because it works anyway is'
 'attractive, but it creates new poblems: when you use third-party software such as a .NET'
 'assembly or an EXE like 7zip.exe on Windows, then you **must** use `\` as a separator.'
 'Even setting the `Directory` property of a `FileBox` object will fail with `/` as the separator.\\'
 'For platform independence it is essential that filenames and directory names are _normalized_.'
 'This means using the correct separator for the current operating system.'
 'Otherwise you could create a directory or file with a backslash in its name, which is disastrous'
 'on Linux or Mac OS.\\'
 'The `FilesAndDirs` functions protect you from this problem by normalizing your file paths.'
 'Use cover functions like `MkDir`, `NNAMES` and `NCREATE` etc. instead of the built-in system '
 'functions to overcome the problem.\\'
 '`⎕NCOPY` and `⎕NMOVE` (introduced in 17.0) are exceptions, but you can use the native function'
 'with the `ExecNfunction` operator.'
 'The `CurrentSep` method returns the correct separator for the current operating system.\\'
 'The `NormalizePath` method normalizes a file path for the current operating system.\\'
 'If you have a particular reason for using `/` under Windows or `\` under Linux'
 'or Mac OS then you can use the `EnforceBackslash` or `EnforceSlash` functions.\\'
 ''
 '## Misc'
 'This class supports Windows, Mac OS and Linux but neither the Raspberry Pi nor AIX.'
 ''
 'Kai Jaeger'
 ''
 'Homepage: <http://github.com/aplteam/FilesAndDirs>'
)
