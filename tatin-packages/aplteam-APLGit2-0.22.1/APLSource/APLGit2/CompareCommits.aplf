 (filename1 filename2 hash1 hash2)←{x}CompareCommits y;space;folder;hash1;hash2;list;noofBytes;flag;exe;alias;parms;branch;name;cfg;ns
⍝ Allows inspection of all differences between two commits in a single comparison.\\
⍝ In case `⍵` is empty the last commit is compared with the checkout commit of the current branch.
⍝ In case `⍵` is a single commit it is compared with the last commit.
⍝ In case `⍵` is a dot ("."), the working directory is compared with the last commit.
⍝ Instead one can specify two commits (hashes) explicitly via the right argument.
⍝ For what `x` can actually be see `EstablishProject`.\\
⍝ Returns either two empty vectors in case no differences were detected or two filenames otherwise.\\
⍝ If the user command `CompareFiles` and one of its comparison utilities is available the two files are compared straight away.\\
⍝ Note that this tool focusses on APL source files, all other files are ingored.\\
⍝ If a Cider config file is found in "folder" then "CIDER.source" is honored.\\
⍝ Because this function established the hashes to be compared if they are not specified (empty), they are also returned.
 x←{0<⎕NC ⍵:⍎⍵ ⋄ ''}'x'
 (space folder)←EstablishProject x
 filename1←filename2←hash1←hash2←''
 :If 0<≢space,folder
     branch←CurrentBranch folder
     y←{0=≢⍵:⍵ ⋄ ⊆⍵}y
     :If 0=≢y
     :OrIf 0=+/≢¨y
         hash1←GetLastCommit folder
         hash2←GetMostRecentAncestor folder
     :ElseIf 1=≢y
     :OrIf 1=+/0=≢¨y
         :If (,'.')≡,1⊃,y
             hash1←'.'
             hash2←GetLastCommit folder
         :Else
             hash1←1⊃,y
             hash2←GetLastCommit folder
         :EndIf
     :Else
         (hash1 hash2)←y~''⍬ 0
     :EndIf
     'The two hashes match - that makes no sense'U.Assert hash1≢hash2
     (hash1 hash2)←{⍵↑⍨¨8⌊≢¨⍵}hash1 hash2
     'The length of the hashes must be 4 or more characters'U.Assert∧/{(,'.')≡,⍵:1 ⋄ 4≤≢⍵}¨hash1 hash2
     ⎕←'Comparing ',({(,'.')≡,⍵:'the current working directory' ⋄ ⍵}hash1),' with ',hash2
     :If (,'.')≡,hash1
         list←1 Status folder
     :Else
         list←folder DiffBetween hash1 hash2
     :EndIf
     :If 0<≢∊list
         ⎕←'Total number of files found: ',⍕≢list
         :If F.IsFile folder,'/cider.config'
             cfg←⊃F.NGET folder,'/cider.config'
             ns←⎕JSON⍠('Dialect' 'JSON5')⊣cfg
         :AndIf F.IsDir folder,'/',ns.CIDER.source
             list←((F.EnforceSlash{⍵,'/'/⍨~'/\'∊⍨¯1↑⍵}ns.CIDER.source){⍺∘≡¨(≢⍺)↑¨⍵}⊢/list)⌿list
         :EndIf
         :If 0<≢list←('.aplc' '.aplf' '.apln' '.aplo' '.apli' '.dyalog'∊⍨{3⊃⎕NPARTS ⍵}¨⊢/list)⌿list
             ⎕←(⍕≢list),' APL source files found to compare'
             (filename1 filename2)←'txt'∘F.GetTempFilename2¨2⍴⊂''
             noofBytes←CompareCommits_ list(branch,': ',hash1)(branch,': ',hash2)folder branch hash1 hash2 filename1 filename2
             :If 0=noofBytes
                 ⎕NDELETE filename1 filename2
                 filename1←filename2←''
             :EndIf
         :Else
             ⎕←'After removing non-APL-source files no files left to compare'
         :EndIf
     :Else
         ⎕←'No files found to compare'
     :EndIf
 :Else
     ⎕←'Nothing to compare?!'
 :EndIf
⍝Done
